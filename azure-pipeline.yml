trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'Azure-Yousma-Connection'
  acrLoginServer: 'myprojectacr1234.azurecr.io'
  imageName: 'moodly'

stages:
# Step 1: Create ACR first
- stage: Create_ACR
  displayName: 'Terraform Apply - Create ACR'
  jobs:
  - job: TF_ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '1.6.6'
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: init
        workingDirectory: terraform
        backendServiceArm: $(azureSubscription)
        backendAzureRmResourceGroupName: yousma-rg
        backendAzureRmStorageAccountName: yousmastorage
        backendAzureRmContainerName: tfstate
        backendAzureRmKey: terraform.tfstate
        environmentServiceNameAzureRM: $(azureSubscription)
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply - Only ACR'
      inputs:
        provider: 'azurerm'
        command: apply
        workingDirectory: terraform
        environmentServiceNameAzureRM: $(azureSubscription)
        commandOptions: >
          -target=azurerm_resource_group.rg
          -target=azurerm_container_registry.acr
          -auto-approve

# Step 2: Build and Push Image
- stage: Build_Push
  displayName: 'Build & Push Docker Image'
  dependsOn: Create_ACR
  jobs:
  - job: BuildPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: AzureCLI@2
      displayName: 'Login to ACR'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name myprojectacr1234
          IMAGE=$(acrLoginServer)/$(imageName):latest
          docker build -t $IMAGE backend
          docker push $IMAGE
    - task: AzureCLI@2
      displayName: 'Verify Image Exists in ACR'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr repository list --name myprojectacr1234 --output table
          az acr repository show-tags --name myprojectacr1234 --repository moodly --output table

# Step 3: Deploy remaining infra + app
- stage: Deploy_App
  displayName: 'Deploy Infra & App'
  dependsOn: Build_Push
  jobs:
  - job: TF_App
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '1.6.6'
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: init
        workingDirectory: terraform
        backendServiceArm: $(azureSubscription)
        backendAzureRmResourceGroupName: yousma-rg
        backendAzureRmStorageAccountName: yousmastorage
        backendAzureRmContainerName: tfstate
        backendAzureRmKey: terraform.tfstate
        environmentServiceNameAzureRM: $(azureSubscription)
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply - Infra & App'
      inputs:
        provider: 'azurerm'
        command: apply
        workingDirectory: terraform
        environmentServiceNameAzureRM: $(azureSubscription)
        commandOptions: -auto-approve
