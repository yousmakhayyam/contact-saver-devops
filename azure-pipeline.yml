trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'Azure-Yousma-Connection'     # âœ… Your ARM service connection name
  containerRegistry: 'acr-connection1'             # âœ…  Your Docker registry connection (Service Connection to ACR)
  acrLoginServer: 'myprojectacr1234.azurecr.io'
  imageName: 'myapp'

stages:
# -----------------------------------------------
# ðŸ”¹ CI Stage: Build and Push Docker Image to ACR
# -----------------------------------------------
- stage: CI
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: Docker@2
      displayName: 'Build and Push Docker Image to ACR'
      inputs:
        command: 'buildAndPush'
        containerRegistry: '$(containerRegistry)'
        repository: '$(imageName)'
        dockerfile: 'backend/Dockerfile'
        buildContext: 'backend'
        tags: |
          latest

# --------------------------------------------------------
# ðŸ”¹ CD Stage: Deploy Infrastructure and App via Terraform
# --------------------------------------------------------
- stage: CD
  displayName: 'Deploy Infra & App via Terraform'
  dependsOn: CI
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: TerraformInstaller@1
      displayName: 'Install Terraform 1.6.6'
      inputs:
        terraformVersion: '1.6.6'

    - script: terraform version
      displayName: 'Show Terraform Version'
      workingDirectory: 'terraform'

    - task: TerraformTaskV4@4
      name: TerraformInit
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'terraform'
        backendServiceArm: '$(azureSubscription)'
        backendAzureRmResourceGroupName: 'yousma-rg'
        backendAzureRmStorageAccountName: 'yousmastorage'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'
        environmentServiceNameAzureRM: '$(azureSubscription)'
        commandOptions: '-upgrade'

    - task: TerraformTaskV4@4
      name: TerraformApply
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: 'terraform'
        environmentServiceNameAzureRM: '$(azureSubscription)'
