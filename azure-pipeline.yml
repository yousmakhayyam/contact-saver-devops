trigger:
  branches:
    include:
      - main

variables:
  azureServiceConnection: 'Azure-Yousma-Connection'        # Your service connection name in Azure DevOps
  dockerRegistryServiceConnection: 'acr-connection'         # ACR service connection
  acrName: 'contactsaveracr123'
  containerImage: 'contact-saver'
  dockerfilePath: 'backend/Dockerfile'
  tfBackendRg: 'yousma-rg'
  tfStorage: 'yousmastorage'
  tfContainer: 'tfstate'
  tfKey: 'terraform.tfstate'

stages:

# -------------------- STAGE 1: Build & Push Docker Image --------------------
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
    - job: BuildImage
      pool:
        vmImage: ubuntu-latest
      steps:
        - checkout: self

        - task: Docker@2
          displayName: 'Build and Push to ACR'
          inputs:
            containerRegistry: $(dockerRegistryServiceConnection)
            repository: $(containerImage)
            command: buildAndPush
            Dockerfile: $(dockerfilePath)
            tags: |
              latest

# -------------------- STAGE 2: Deploy Terraform Infrastructure --------------------
- stage: Deploy
  displayName: 'Terraform Deploy Infra + Web App'
  dependsOn: Build
  jobs:
    - job: Terraform
      pool:
        vmImage: ubuntu-latest
      steps:
        - checkout: self

        - task: TerraformInstaller@0
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: '1.7.5'

        # âœ… Use TerraformTaskV1 with backendServiceArm (correct SP method)
        - task: TerraformTaskV1@0
          displayName: 'Terraform Init'
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: 'terraform'
            backendServiceArm: $(azureServiceConnection)
            backendAzureRmResourceGroupName: $(tfBackendRg)
            backendAzureRmStorageAccountName: $(tfStorage)
            backendAzureRmContainerName: $(tfContainer)
            backendAzureRmKey: $(tfKey)

        - task: TerraformTaskV1@0
          displayName: 'Terraform Apply'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            workingDirectory: 'terraform'
            environmentServiceNameAzureRM: $(azureServiceConnection)
            vars: |
              resource_group_name=$(tfBackendRg)
              location=East US
              acr_name=$(acrName)
              app_service_plan_name=contact-asp
              web_app_name=contact-webapp
              key_vault_name=contactkv
              email_api_key=sample-api-key
              acr_admin_username=$(ACR_USERNAME)
              acr_admin_password=$(ACR_PASSWORD)
              container_image=$(containerImage)
            args: '-auto-approve'
